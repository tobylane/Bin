#!/bin/bash
set -ea
# Creates environment for compiling CorsixTH.
# Recommended to run in ~/Downloads/ or wherever the git repo folder already is.
# User must first install Xcode and command line utilities (app store).
# Xz, alerter and anybar are not required for CorsixTH and are not checked for.
# Expected to work with OS X 10.9+ as-is, with 10.7-8 with certain changes.
# Usage: cthprepare [ clean | build [ package [ xz | zip | folder | dmg ] [ upload ] ] ]

lua=lua5.3 # lua5.1 lua lua5.3 for 5.1 5.2 5.3

if type brew > /dev/null 2>&1 # Adapt or remove this for other package managers
then echo "Homebrew already installed"
else ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi
 
if type $lua > /dev/null 2>&1 # Adapt this if these dependancies are not in typical, assumed locations.
then echo "Dependencies already installed"
else
	brew install $(echo $lua | sed 's/\.//') ffmpeg freetype sdl2 sdl2_mixer xz
	brew cask install anybar
	lrx=luarocks-${lua:3:3}
	$lrx install lpeg
	$lrx install luafilesystem
	$lrx install luasocket # Only useful for releases, doesn't work with lua 5.2-3
fi

if [ -d CorsixTH/.git/ ]
then echo "Git repo already exists"
else
	git clone --depth=1 https://github.com/CorsixTH/CorsixTH || true
	# This has no history, to download it all use 'git fetch --unshallow'
	mkdir -p CorsixTH/build_files && mkdir -p CorsixTH/build/CorsixTH
fi

cd CorsixTH/build_files # The build files folder is git ignored, so these scripts won't be in git status
curl -fLSO https://raw.githubusercontent.com/tobylane/Bin/master/cthupdate
curl -fLSO https://raw.githubusercontent.com/tobylane/Bin/master/cthpackage
curl -fLSO https://raw.githubusercontent.com/tobylane/Bin/master/cthanybar
curl -fLSO https://raw.githubusercontent.com/tobylane/Bin/master/cthnotify
curl -fLS https://github.com/vjeantet/alerter/releases/download/002/alerter_v002_darwin_amd64.zip | bsdtar -xvf-
# curl -fLS  https://raw.githubusercontent.com/tobylane/Bin/master/com.corsixth.cthanybar.plist > ~/Library/Launchagents/com.corsixth.cthanybar.plist
# launchctl load com.corsixth.cthanybar.plist
# curl -fLS  https://raw.githubusercontent.com/tobylane/Bin/master/com.corsixth.cthnotify.plist > ~/Library/Launchagents/com.corsixth.cthnotify.plist
# launchctl load com.corsixth.cthnotify.plist
chmod +x cthupdate cthpackage cthanybar cthnotify alerter

if    [ -d CMake.app ] 
	then echo "CMake is already in place."
elif  [ -d ../../CMake.app ]
	then mv ../../CMake.app .
 		 echo "CMake has been put in the build files folder."
elif [ -d /Applications/CMake.app ] || [ -d ~/Applications/CMake.app ]
	then echo "You have CMake in an applications folder. Adjust the path in the update script or move the app to this folder."
elif grep -q 'alias cmake=' ~/.bash_profile || type cmake > /dev/null 2>&1
	then echo "Cmake is in your \$PATH or aliases. Adjust the update script to use this."
else 
	curl -fLS https://cmake.org/files/v3.4/cmake-3.4.0-rc3-Darwin-x86_64.tar.gz | tar --strip-components=1 -xz
	echo "CMake download complete."
fi

if [ ! -z ${1+x} ] # If any parameter is given run the update/build script, pass on second parameter for package
then build_files/cthupdate build ${@:2} # cthnotify or cthanybar can be used as a wrapper of cthupdate
else echo "Prepared. Run cthupdate, with optional paramater build to force a build, and also package to create the archive"
fi
