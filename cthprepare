#!/bin/bash
set -ea
# Creates environment for compiling CorsixTH.
# Recommended to run in ~/Downloads/ or wherever the git repo folder already is.
# User must first install XCode and command line utilities (app store).
# Expected to work with OS X 10.9+ as-is, with 10.7-8 with certain changes.
# Usage: cthprepare [ clean | build [ package [ xz | zip | folder | dmg ] [ upload ] ] ]

lua=lua53 # lua51 lua lua53 for 5.1 5.2 5.3

if [[ $(type brew) = "* not found" ]] # Adapt or remove this for other package managers
then ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
else echo "Homebrew already installed"
fi

if [[ $(type lua) = "* not found" ]] # Adapt this if these dependancies are not in typical, assumed locations
then 
	brew install $lua ffmpeg freetype sdl2 sdl2_mixer
	luarocks-$lua install lpeg
	luarocks-$lua install luafilesystem
	#luarocks-$lua install luasocket # Only needed for releases, doesn't work with lua 5.2-3
else echo "Dependencies already installed"
fi

if [ ! -d CorsixTH/.git/ ]
then 
	mkdir -p CorsixTH
	git clone --depth=1 https://github.com/CorsixTH/CorsixTH || true
	# This has no history, to download it all use 'git fetch --unshallow'
else echo "Git repo already exists"
fi

cd CorsixTH
curl -fLSO https://raw.githubusercontent.com/tobylane/Bin/master/cthupdate
curl -fLSO https://raw.githubusercontent.com/tobylane/Bin/master/cthpackage
chmod a+x cthupdate cthpackage

if    [ -d CMake.app ] 
	then echo "CMake is already in place."
elif  [ -d ../CMake.app ]
	then mv ../CMake.app .
 		 echo "CMake has been put in the CorsixTH folder."
elif [ -d /Applications/CMake.app ] || [ -d ~/Applications/CMake.app ]
	then echo "You have CMake in your applications folder. Adjust the path in the update script or move the app to this folder."
elif grep -q 'alias cmake=' ~/.bash_profile || [[ $(type cmake) = "cmake is *" ]]
	then echo "Cmake is in your \$PATH or aliases. Adjust the update script to use this."
else 
	curl -fLS https://cmake.org/files/v3.4/cmake-3.4.0-rc3-Darwin-x86_64.tar.gz | tar --strip-components=1 -xz
	echo "CMake download complete."
fi

if [ ! -z ${1+x} ] # If any parameter is given run the update/build script, pass on second parameter for package
then ./cthupdate build ${@:2}
else echo "Prepared. Run cthupdate, with optional paramater build to force a build, and also package to create the archive"
fi
