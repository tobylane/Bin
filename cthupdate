#!/bin/bash
set -a
# Script to pull from github all updates, if any cmake then rerun cmake and xcode, if any c++ then rerun xcode.
# In any case the lua files are copied into the latest app, and the app named after the commit ref is rotated.
# brew update && brew upgrade # A good idea every so often, brew outdated to see what upgrade will do
# Usage: cthupdate [ clean | build [ package [ xz | zip | folder | dmg ] [ upload ] ] ]

lua=5.3 # 5.1 5.2 5.3
changelog=1 # 0 1
dir=$(brew --prefix) # Adjust for your package manager or manual install

if [[ $PWD == */build_files ]]; then cd ../; fi

# If the git repository is a fork and you want to build the latest upstream version
# git fetch upstream && git checkout -b upstream upstream/master 2>/dev/null || git checkout upstream

if [ x$1 == "xclean" ]
	then rm -rf build && mkdir build && echo "Cleaned" && exit 0
fi

if [[ $(git pull) == "Already up-to-date." ]] && ! [[ $1 =~ (build|cmake|xcode) ]]
then
	echo "No new changes"
	exit 0
fi

find . -prune -name "CorsixTH-*.app" -exec rm -rf {} \;
rsync -a CorsixTH.app/ CorsixTH-$(git rev-parse --short HEAD@{1}).app || true

if [[ $(git diff --name-only HEAD@{1} HEAD) == *.cmake* ]] || [[ $1 == "build" ]] || [[ $1 == "cmake" ]]
then
	cd build
	# Adjust this path if CMake is elsewhere, eg /Applications/CMake.app/Contents/bin/cmake
	../build_files/CMake.app/Contents/bin/cmake ../ -G Xcode \
-DLUA_PROGRAM_PATH=$dir/bin/lua$lua -DLUA_INCLUDE_DIR=$dir/include/lua$lua/ -DLUA_LIBRARY=$dir/lib/liblua.$lua.dylib
	cd ../
fi

if [[ $(git diff --name-only HEAD@{1} HEAD) =~ (.cmake|Src|.txt) ]] || [[ $1 == "build" ]] || [[ $1 == "xcode" ]]
then
	cd build/CorsixTH/
	xcodebuild -configuration Release > /dev/null # xctool -configuration Release -scheme CorsixTH
	rm -rf Release/CorsixTH.app/Contents/Resources/*/
	rsync -a --remove-source-files --delete --force Release/CorsixTH.app ../../ || true
	cd ../../
fi

rsync -r --include-from=CorsixTH/RequiredResources.txt CorsixTH/ CorsixTH.app/Contents/MacOS/
rsync -aW README.txt LICENSE.txt CONTRIBUTING.txt CorsixTH.app/
mv CorsixTH.app/Contents/MacOS/changelog.txt CorsixTH.app/

if git describe --tags --contains HEAD@{1} > /dev/null 2>&1
	then true # Release or release candidate
elif [ $changelog == "1" ]
	then git --no-pager log --no-merges --oneline --color HEAD@{1}..HEAD | head -n10
else
	echo "Updated to $(git rev-parse --short HEAD)"
fi

# git checkout - # To return to the previous branch, to be used with line 15

if [[ $2 == package ]]
	then build_files/cthpackage ${@:3}
fi
