#!/bin/bash
set -ea
# Script to pull from github all updates, if any cmake then rerun cmake and xcode, if any c++ then rerun xcode.
# In any case the lua files are copied into the latest app, and the app named after the commit ref is rotated.
# brew update && brew upgrade # A good idea every so often, brew outdated to see what upgrade will do
# Usage: cthupdate [ clean | build [ package [ xz | zip | folder | dmg ] [ upload ] ] ]

lua=5.3 # 5.1 5.2 5.3
changelog=1 # 0 1

if [ x$1 = "xclean" ]
	then rm -rf build && mkdir build && echo "Cleaned" && exit 0
fi

if [[ $(git pull) == "Already up-to-date." ]] && [[ $1 != "build" ]]
then
	echo "No new changes"
	exit 0
fi

find . -prune -name "CorsixTH-*.app" -exec rm -rf {} \;
rsync -a CorsixTH.app/ CorsixTH-$(git rev-parse --short HEAD@{1}).app || true

if [[ $(git diff --name-only HEAD@{1} HEAD) == *.cmake* ]] || [[ $1 == 'build' ]] || [[ $1 == 'cmake' ]]
then
	cd build
	# Adjust this path if CMake is elsewhere, eg /Applications/CMake.app/Contents/bin/cmake
	~/Applications/CMake.app/Contents/bin/cmake ../ -G Xcode \
-DLUA_PROGRAM_PATH=$(which lua"$lua") -DLUA_INCLUDE_DIR=/usr/local/include/lua"$lua"/ -DLUA_LIBRARY=/usr/local/lib/liblua."$lua".dylib
	cd ../
fi

if [[ $(git diff --name-only HEAD@{1} HEAD) =~ (.cmake|Src|.txt) ]] || [[ $1 == 'build' ]] || [[ $1 == 'xcode' ]]
then
	cd build/CorsixTH/
	xcodebuild -configuration Release > /dev/null # xctool -configuration Release -scheme CorsixTH
	rsync -a --remove-source-files --delete --force Release/CorsixTH.app ../../ || true
	cd ../../
	rm -rf CorsixTH.app/Contents/Resources/
fi

rsync -aW CorsixTH/Lua CorsixTH/Bitmap CorsixTH/Campaigns CorsixTH/Levels CorsixTH/CorsixTH.lua CorsixTH.app/Contents/MacOS/
echo "Updated to $(git rev-parse --short HEAD)"

if [ $changelog == "1" ]
then
	git --no-pager log --no-merges --oneline --color HEAD@{1}..HEAD
	printf ""
fi

if git describe --tags --contains HEAD@{1} > /dev/null 2>&1
	then true #release or release candidate
fi

if [[ $2 == package ]]
	then ./cthpackage ${@:3}
fi
